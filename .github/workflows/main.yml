name: .NET Core CI - Build -> Lint -> Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # # Set up .NET Core SDK
      # - name: Set up .NET Core
      #   uses: actions/setup-dotnet@v2
      #   with:
      #     dotnet-version: '7.0'  # Set to your .NET version

      # # Restore dependencies
      # - name: Restore dependencies
      #   run: dotnet restore

      # # Build the solution
      # - name: Build the solution
      #   run: dotnet build --configuration Release

  lint:
    runs-on: ubuntu-latest
    needs: build  # This makes sure linting happens after the build

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # # Set up .NET Core SDK
      # - name: Set up .NET Core
      #   uses: actions/setup-dotnet@v2
      #   with:
      #     dotnet-version: '6.0'

      # # Install dotnet format tool for code formatting
      # - name: Install dotnet format
      #   run: dotnet tool install --global dotnet-format

      # # Run dotnet format for linting
      # - name: Run dotnet format
      #   run: dotnet format --check --verbosity diagnostic  # '--check' only checks without formatting the code

      # # Install StyleCop Analyzers for static code analysis
      # - name: Install StyleCop Analyzers
      #   run: dotnet add package StyleCop.Analyzers --version 1.1.0-beta.7  # Adjust to the latest stable version if needed

      # # Run linting with StyleCop Analyzers
      # - name: Run StyleCop Analyzers
      #   run: dotnet build --no-restore  # This will trigger StyleCop analyzers during the build

  test:
    runs-on: ubuntu-latest
    needs: lint  # This makes sure tests happen after linting

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up .NET Core SDK
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.0'

      # Run unit tests for MeChat.Architecture.Tests
      - name: Run unit tests for MeChat.Architecture.Tests
        run: dotnet test test/MeChat.Architecture.Tests/MeChat.Architecture.Tests.csproj --no-build --verbosity normal
